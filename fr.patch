--- fbpanel-6.1/plugins/menu/system_menu.c	2010-04-15 10:43:56.000000000 +0200
+++ fbpanel-6.1/plugins/menu/system_menu-fr.c	2010-07-23 00:20:25.000000000 +0200
@@ -20,18 +20,18 @@
 } cat_info;
 
 static cat_info main_cats[] = {
-    { "AudioVideo", "applications-multimedia", "Audio & Video" },
+    { "AudioVideo", "applications-multimedia", "Audio & Vidéo" },
 
     //{ "Education",  "applications-education" },
-    { "Education",  "applications-other" },
-    { "Game",       "applications-games" },
-    { "Graphics",   "applications-graphics" },
-    { "Network",    "applications-internet" },
-    { "Office",     "applications-office" },
-    { "Settings",   "preferences-system" },
-    { "System",     "applications-system" },
-    { "Utility",    "applications-utilities" },
-    { "Development","applications-development" },
+    { "Education",  "applications-other", "Éducation" },
+    { "Game",       "applications-games", "Jeux" },
+    { "Graphics",   "applications-graphics", "Graphique" },
+    { "Network",    "applications-internet", "Réseau" },
+    { "Office",     "applications-office", "Bureautique" },
+    { "Settings",   "preferences-system", "Paramètres" },
+    { "System",     "applications-system", "Système" },
+    { "Utility",    "applications-utilities", "Utilitaires" },
+    { "Development","applications-development", "Développement" },
 };
 
 static void
--- fbpanel-6.1/panel/misc.c	2010-04-28 13:39:31.000000000 +0200
+++ fbpanel-6.1/panel/misc-fr.c	2010-07-23 01:17:16.000000000 +0200
@@ -72,22 +72,22 @@
 Atom a_KDE_NET_WM_SYSTEM_TRAY_WINDOW_FOR;
 
 xconf_enum allign_enum[] = {
-    { .num = ALLIGN_LEFT, .str = "left" },
-    { .num = ALLIGN_RIGHT, .str = "right" },
-    { .num = ALLIGN_CENTER, .str = "center"},
+    { .num = ALLIGN_LEFT, .str = "gauche" },
+    { .num = ALLIGN_RIGHT, .str = "droite" },
+    { .num = ALLIGN_CENTER, .str = "centre"},
     { .num = 0, .str = NULL },
 };
 xconf_enum edge_enum[] = {
-    { .num = EDGE_LEFT, .str = "left" },
-    { .num = EDGE_RIGHT, .str = "right" },
-    { .num = EDGE_TOP, .str = "top" },
-    { .num = EDGE_BOTTOM, .str = "bottom" },
+    { .num = EDGE_LEFT, .str = "gauche" },
+    { .num = EDGE_RIGHT, .str = "droite" },
+    { .num = EDGE_TOP, .str = "haut" },
+    { .num = EDGE_BOTTOM, .str = "bas" },
     { .num = 0, .str = NULL },
 };
 xconf_enum widthtype_enum[] = {
-    { .num = WIDTH_REQUEST, .str = "request" , .desc = "dynamic" },
+    { .num = WIDTH_REQUEST, .str = "request" , .desc = "dynamique" },
     { .num = WIDTH_PIXEL, .str = "pixel" , .desc = "pixels" },
-    { .num = WIDTH_PERCENT, .str = "percent", .desc = "% of screen" },
+    { .num = WIDTH_PERCENT, .str = "percent", .desc = "% de l'écran" },
     { .num = 0, .str = NULL },
 };
 xconf_enum heighttype_enum[] = {
@@ -100,14 +100,14 @@
     { .num = 0, .str = NULL },
 };
 xconf_enum pos_enum[] = {
-    { .num = POS_NONE, .str = "none" },
-    { .num = POS_START, .str = "start" },
-    { .num = POS_END,  .str = "end" },
+    { .num = POS_NONE, .str = "aucun" },
+    { .num = POS_START, .str = "début" },
+    { .num = POS_END,  .str = "fin" },
     { .num = 0, .str = NULL},
 };
 xconf_enum layer_enum[] = {
-    { .num = LAYER_ABOVE, .str = "above" },
-    { .num = LAYER_BELOW, .str = "below" },
+    { .num = LAYER_ABOVE, .str = "au-dessus" },
+    { .num = LAYER_BELOW, .str = "en-dessous" },
     { .num = 0, .str = NULL},
 };
 
--- fbpanel-6.1/panel/gconf_panel.c	2010-05-13 12:50:31.000000000 +0200
+++ fbpanel-6.1/panel/gconf_panel-fr.c	2010-07-23 01:24:22.000000000 +0200
@@ -54,7 +54,7 @@
     /* label */
     w = gtk_label_new(NULL);
     gtk_misc_set_alignment(GTK_MISC(w), 0, 0.5);
-    gtk_label_set_markup(GTK_LABEL(w), "<b>Visual Effects</b>");
+    gtk_label_set_markup(GTK_LABEL(w), "<b>Effets visuels</b>");
     gconf_block_add(gl_block, w, TRUE);
 
     /* effects */
@@ -62,11 +62,11 @@
 
     /* transparency */
     w = gconf_edit_boolean(effects_block, xconf_get(xc, "transparent"),
-        "Transparency");
+        "Transparence");
     gconf_block_add(effects_block, w, TRUE);
 
     color_block = gconf_block_new(NULL, NULL, INDENT_2);
-    w = gtk_label_new("Color settings");
+    w = gtk_label_new("Couleur");
     gconf_block_add(color_block, w, TRUE);
     w = gconf_edit_color(color_block, xconf_get(xc, "tintcolor"),
         xconf_get(xc, "alpha"));
@@ -76,11 +76,11 @@
 
     /* round corners */
     w = gconf_edit_boolean(effects_block, xconf_get(xc, "roundcorners"),
-        "Round corners");
+        "Coins arrondis");
     gconf_block_add(effects_block, w, TRUE);
 
     corner_block = gconf_block_new(NULL, NULL, INDENT_2);
-    w = gtk_label_new("Radius is ");
+    w = gtk_label_new("Rayon de ");
     gconf_block_add(corner_block, w, TRUE);
     w = gconf_edit_int(geom_block, xconf_get(xc, "roundcornersradius"), 0, 30);
     gconf_block_add(corner_block, w, FALSE);
@@ -90,11 +90,11 @@
 
     /* auto hide */
     w = gconf_edit_boolean(effects_block, xconf_get(xc, "autohide"),
-        "Autohide");
+        "Masquer automatiquement");
     gconf_block_add(effects_block, w, TRUE);
 
     ah_block = gconf_block_new(NULL, NULL, INDENT_2);
-    w = gtk_label_new("Height when hidden is ");
+    w = gtk_label_new("Hauteur quand masqué : ");
     gconf_block_add(ah_block, w, TRUE);
     w = gconf_edit_int(ah_block, xconf_get(xc, "heightwhenhidden"), 0, 10);
     gconf_block_add(ah_block, w, FALSE);
@@ -103,7 +103,7 @@
     gconf_block_add(effects_block, ah_block->main, TRUE);
     
     w = gconf_edit_int(effects_block, xconf_get(xc, "maxelemheight"), 0, 128);
-    gconf_block_add(effects_block, gtk_label_new("Max Element Height"), TRUE);
+    gconf_block_add(effects_block, gtk_label_new("Hauteur maxi élément"), TRUE);
     gconf_block_add(effects_block, w, FALSE);
     gconf_block_add(gl_block, effects_block->main, TRUE);
     
@@ -135,7 +135,7 @@
     /* label */
     w = gtk_label_new(NULL);
     gtk_misc_set_alignment(GTK_MISC(w), 0, 0.5);
-    gtk_label_set_markup(GTK_LABEL(w), "<b>Properties</b>");
+    gtk_label_set_markup(GTK_LABEL(w), "<b>Propriétés</b>");
     gconf_block_add(gl_block, w, TRUE);
 
     /* properties */
@@ -143,25 +143,25 @@
 
     /* strut */ 
     w = gconf_edit_boolean(prop_block, xconf_get(xc, "setpartialstrut"),
-        "Do not cover by maximized windows");
+        "Non recouvert par les fenêtes maximisées");
     gconf_block_add(prop_block, w, TRUE);
     
     w = gconf_edit_boolean(prop_block, xconf_get(xc, "setdocktype"),
-        "Set 'Dock' type");
+        "Type 'Dock'");
     gconf_block_add(prop_block, w, TRUE);
     
     /* set layer */
     w = gconf_edit_boolean(prop_block, xconf_get(xc, "setlayer"),
-        "Set stacking layer");
+        "Couche de recouvrement");
     gconf_block_add(prop_block, w, TRUE);
 
     layer_block = gconf_block_new(NULL, NULL, INDENT_2);
-    w = gtk_label_new("Panel is ");
+    w = gtk_label_new("Le panel est ");
     gconf_block_add(layer_block, w, TRUE);
     w = gconf_edit_enum(layer_block, xconf_get(xc, "layer"),
         layer_enum);
     gconf_block_add(layer_block, w, FALSE);
-    w = gtk_label_new("all windows");
+    w = gtk_label_new("des fenêtres");
     gconf_block_add(layer_block, w, FALSE);
     gconf_block_add(prop_block, layer_block->main, TRUE);
 
@@ -206,14 +206,14 @@
     /* label */
     w = gtk_label_new(NULL);
     gtk_misc_set_alignment(GTK_MISC(w), 0, 0.5);
-    gtk_label_set_markup(GTK_LABEL(w), "<b>Geometry</b>");
+    gtk_label_set_markup(GTK_LABEL(w), "<b>Géométrie</b>");
     gconf_block_add(gl_block, w, TRUE);
 
     /* geometry */
     geom_block = gconf_block_new((GCallback)geom_changed, xc, 10);
     
     w = gconf_edit_int(geom_block, xconf_get(xc, "width"), 0, 2300);
-    gconf_block_add(geom_block, gtk_label_new("Width"), TRUE);
+    gconf_block_add(geom_block, gtk_label_new("Largeur"), TRUE);
     gconf_block_add(geom_block, w, FALSE);
     width_spin = w;
     
@@ -223,22 +223,22 @@
     width_opt = w;
     
     w = gconf_edit_int(geom_block, xconf_get(xc, "height"), 0, 300);
-    gconf_block_add(geom_block, gtk_label_new("Height"), TRUE);
+    gconf_block_add(geom_block, gtk_label_new("Hauteur"), TRUE);
     gconf_block_add(geom_block, w, FALSE);
 
     w = gconf_edit_enum(geom_block, xconf_get(xc, "edge"),
         edge_enum);
-    gconf_block_add(geom_block, gtk_label_new("Edge"), TRUE);
+    gconf_block_add(geom_block, gtk_label_new("Bord écran"), TRUE);
     gconf_block_add(geom_block, w, FALSE);
 
     w = gconf_edit_enum(geom_block, xconf_get(xc, "allign"),
         allign_enum);
-    gconf_block_add(geom_block, gtk_label_new("Allignment"), TRUE);
+    gconf_block_add(geom_block, gtk_label_new("Alignement"), TRUE);
     gconf_block_add(geom_block, w, FALSE);
     allign_opt = w;
     
     w = gconf_edit_int(geom_block, xconf_get(xc, "margin"), 0, 300);
-    gconf_block_add(geom_block, gtk_label_new("Margin"), FALSE);
+    gconf_block_add(geom_block, gtk_label_new("Marge"), FALSE);
     gconf_block_add(geom_block, w, FALSE);
     margin_spin = w;
 
@@ -282,7 +282,7 @@
     page = gtk_vbox_new(FALSE, 1);
     gtk_container_set_border_width(GTK_CONTAINER(page), 10);
     
-    s1 = g_strdup_printf("You're using '<b>%s</b>' profile, stored at\n"
+    s1 = g_strdup_printf("Vous utilisez le profil '<b>%s</b>', situé dans\n"
         "<tt>%s</tt>", panel_get_profile(), panel_get_profile_file());
     label = gtk_label_new(NULL);
     gtk_label_set_markup(GTK_LABEL(label), s1);
@@ -349,7 +349,7 @@
     ENTER;
     DBG("creating dialog\n");
     //name = g_strdup_printf("fbpanel settings: <%s> profile", cprofile);
-    name = g_strdup_printf("fbpanel settings: <%s> profile",
+    name = g_strdup_printf("Configuration fbpanel: profil <%s>",
         panel_get_profile());
     dialog = gtk_dialog_new_with_buttons (name,
         NULL,
@@ -395,7 +395,7 @@
     gtk_notebook_append_page(GTK_NOTEBOOK(nb), sw, label);
 
     sw = mk_tab_profile(xc);
-    label = gtk_label_new("Profile");
+    label = gtk_label_new("Profil");
     gtk_misc_set_padding(GTK_MISC(label), 4, 1);
     gtk_notebook_append_page(GTK_NOTEBOOK(nb), sw, label);
 
